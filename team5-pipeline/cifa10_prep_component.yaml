name: Cifa10 preprocessing
inputs:
- {name: img_path, type: String}
outputs:
- {name: f}
implementation:
  container:
    image: tensorflow/tensorflow:2.1.0-py3
    command:
    - sh
    - -c
    - (PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet --no-warn-script-location
      'opencv-python==4.5.1.48' || PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip
      install --quiet --no-warn-script-location 'opencv-python==4.5.1.48' --user)
      && "$0" "$@"
    - python3
    - -u
    - -c
    - |
      def _parent_dirs_maker_that_returns_open_file(mode: str, encoding: str = None):
          def make_parent_dirs_and_return_path(file_path: str):
              import os
              os.makedirs(os.path.dirname(file_path), exist_ok=True)
              return open(file_path, mode=mode, encoding=encoding)
          return make_parent_dirs_and_return_path

      def cifa10_preprocessing(img_path, f):
      # def cifa10_preprocessing(img_path: str):
          import cv2
          import numpy as np
          import tensorflow as tf

          img = cv2.imread(img_path)
          img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
          img = img.reshape(-1,3).T.reshape(-1)
          img = tf.convert_to_tensor([img], np.uint8)
          img = tf.reshape(img, (-1, 3, 32, 32))
          img = tf.transpose(img, (0, 2, 3, 1))
          img = tf.cast(img, tf.float32)
          img = img / 255

          f.write(str(img)) # cast to str

      import argparse
      _parser = argparse.ArgumentParser(prog='Cifa10 preprocessing', description='')
      _parser.add_argument("--img-path", dest="img_path", type=str, required=True, default=argparse.SUPPRESS)
      _parser.add_argument("--f", dest="f", type=_parent_dirs_maker_that_returns_open_file('wt'), required=True, default=argparse.SUPPRESS)
      _parsed_args = vars(_parser.parse_args())

      _outputs = cifa10_preprocessing(**_parsed_args)
    args:
    - --img-path
    - {inputValue: img_path}
    - --f
    - {outputPath: f}
